apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "claude-relay.fullname" . }}
  labels:
    {{- include "claude-relay.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "claude-relay.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "claude-relay.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "claude-relay.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-redis
          image: "busybox:1.36"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for Redis TCP connection..."
              until nc -z {{ include "claude-relay.redisHost" . }} {{ include "claude-relay.redisPort" . }}; do
                echo "Redis is not ready yet. Retrying in 2 seconds..."
                sleep 2
              done
              echo "Redis TCP connection is ready!"
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 10m
              memory: 32Mi
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          env:
            # Server configuration
            - name: NODE_ENV
              value: {{ .Values.config.nodeEnv | quote }}
            - name: PORT
              value: {{ .Values.config.port | quote }}
            - name: HOST
              value: {{ .Values.config.host | quote }}
            
            # Security configuration
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "claude-relay.fullname" . }}-secret
                  key: jwt-secret
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "claude-relay.fullname" . }}-secret
                  key: encryption-key
            - name: ADMIN_SESSION_TIMEOUT
              value: "{{ printf "%.0f" .Values.config.adminSessionTimeout }}"
            - name: API_KEY_PREFIX
              value: {{ .Values.config.apiKeyPrefix | quote }}
            
            # Admin credentials
            {{- if .Values.config.adminUsername }}
            - name: ADMIN_USERNAME
              value: {{ .Values.config.adminUsername | quote }}
            {{- end }}
            {{- if .Values.config.adminPassword }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "claude-relay.fullname" . }}-secret
                  key: admin-password
            {{- end }}
            
            # Redis configuration
            - name: REDIS_HOST
              value: {{ include "claude-relay.redisHost" . | quote }}
            - name: REDIS_PORT
              value: {{ include "claude-relay.redisPort" . | quote }}
            {{- if include "claude-relay.redisPassword" . }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "claude-relay.fullname" . }}-secret
                  key: redis-password
            {{- end }}
            - name: REDIS_DB
              value: {{ include "claude-relay.redisDatabase" . | quote }}
            - name: REDIS_ENABLE_TLS
              value: {{ include "claude-relay.redisTLS" . | quote }}
            
            # Claude API configuration
            - name: CLAUDE_API_URL
              value: {{ .Values.config.claudeApiUrl | quote }}
            - name: CLAUDE_API_VERSION
              value: {{ .Values.config.claudeApiVersion | quote }}
            - name: CLAUDE_BETA_HEADER
              value: {{ .Values.config.claudeBetaHeader | quote }}
            
            # Proxy configuration
            - name: DEFAULT_PROXY_TIMEOUT
              value: {{ .Values.config.defaultProxyTimeout | quote }}
            - name: MAX_PROXY_RETRIES
              value: {{ .Values.config.maxProxyRetries | quote }}
            
            # Usage limits
            - name: DEFAULT_TOKEN_LIMIT
              value: "{{ printf "%.0f" .Values.config.defaultTokenLimit }}"
            
            # Logging configuration
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: LOG_MAX_SIZE
              value: {{ .Values.config.logMaxSize | quote }}
            - name: LOG_MAX_FILES
              value: {{ .Values.config.logMaxFiles | quote }}
            
            # System configuration
            - name: CLEANUP_INTERVAL
              value: "{{ printf "%.0f" .Values.config.cleanupInterval }}"
            - name: RATE_LIMIT_CLEANUP_INTERVAL
              value: "{{ printf "%.0f" .Values.config.rateLimitCleanupInterval }}"
            - name: TOKEN_USAGE_RETENTION
              value: "{{ printf "%.0f" .Values.config.tokenUsageRetention }}"
            - name: HEALTH_CHECK_INTERVAL
              value: "{{ printf "%.0f" .Values.config.healthCheckInterval }}"
            - name: TIMEZONE_OFFSET
              value: {{ .Values.config.timezoneOffset | quote }}
            
            # Web interface configuration
            - name: WEB_TITLE
              value: {{ .Values.config.webTitle | quote }}
            - name: WEB_DESCRIPTION
              value: {{ .Values.config.webDescription | quote }}
            - name: WEB_LOGO_URL
              value: {{ .Values.config.webLogoUrl | quote }}
            
            # Development configuration
            - name: DEBUG
              value: {{ .Values.config.debug | quote }}
            - name: ENABLE_CORS
              value: {{ .Values.config.enableCors | quote }}
            - name: TRUST_PROXY
              value: {{ .Values.config.trustProxy | quote }}
            
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /app/data
            {{- if or (eq .Values.storage.logs.mode "fluentbit") (eq .Values.storage.logs.mode "forward") (eq .Values.storage.logs.mode "pvc") }}
            - name: logs
              mountPath: /app/logs
            {{- end }}
            {{- if .Values.storage.data.external.enabled }}
            - name: external-data
              mountPath: /app/external-data
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- if or (eq .Values.storage.logs.mode "fluentbit") (eq .Values.storage.logs.mode "forward") }}
        - name: fluent-bit
          image: "{{ .Values.storage.logs.fluentbit.image.repository }}:{{ .Values.storage.logs.fluentbit.image.tag }}"
          imagePullPolicy: {{ .Values.storage.logs.fluentbit.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: logs
              mountPath: /app/logs
              readOnly: true
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
              readOnly: true
          resources:
            {{- toYaml .Values.storage.logs.fluentbit.resources | nindent 12 }}
        {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: data
          {{- if eq .Values.storage.data.type "emptyDir" }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.storage.data.external.enabled }}
        - name: external-data
          persistentVolumeClaim:
            claimName: {{ include "claude-relay.fullname" . }}-external-data
        {{- end }}
        {{- if or (eq .Values.storage.logs.mode "fluentbit") (eq .Values.storage.logs.mode "forward") }}
        - name: logs
          emptyDir: {}
        - name: fluent-bit-config
          configMap:
            name: {{ include "claude-relay.fullname" . }}-fluent-bit-config
            defaultMode: 0644
        {{- else if eq .Values.storage.logs.mode "pvc" }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ include "claude-relay.fullname" . }}-logs
        {{- else if eq .Values.storage.logs.mode "emptyDir" }}
        - name: logs
          emptyDir: {}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

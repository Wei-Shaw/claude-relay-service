# Claude Relay Service Docker Compose 配置 (源码构建版本)
# 从源码构建，无需依赖外部镜像

services:
  # 🚀 Claude Relay Service (从源码构建)
  claude-relay:
    build:
      context: .
      dockerfile: Dockerfile
      # 构建参数（可选）
      args:
        - NODE_ENV=production
    # 构建完成后的镜像名称（可选）
    image: claude-relay-service:local
    restart: unless-stopped
    ports:
      # 绑定地址：生产环境建议使用反向代理，设置 BIND_HOST=127.0.0.1
      - "${BIND_HOST:-0.0.0.0}:${BIND_PORT:-3000}:3000"
    # 🔑 使用 .env 文件配置
    env_file:
      - .env
    environment:
      # Docker特定配置
      - REDIS_HOST=redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      # 开发时可挂载配置文件（可选）
      # - ./config/config.js:/app/config/config.js:ro
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - claude-relay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s  # 给构建和启动更多时间

  # 📊 Redis Database
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    # 仅在容器网络内部暴露端口，不映射到主机
    expose:
      - "6379"
    # 注意：如需本地调试访问，可取消下行注释（生产环境禁用）
    ports:
      - "6380:6379"
    volumes:
      - /home/doveliu/redis:/data
    command: redis-server --save 60 1000 --save 300 10
    networks:
      - claude-relay-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  claude-relay-network:
    driver: bridge
